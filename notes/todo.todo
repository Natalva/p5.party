# NOW
i'm working on this right now, i need to make sure that when you call
partyGetMyShared and partyGetParticipantShared you get back a "live"
object or array that will get updated with the right data
and i need to make p5 wait for preload and provide callbackswaaaz



# Tooling 

- consider providing min and unmin versions
	https://stackoverflow.com/questions/25956937/how-to-build-minified-and-uncompressed-bundle-with-webpack
	- compare to other p5 libraries

- can bake package version into code somehow?

.- why is version on npm up to date, only 50k, and missing css? also dist was empty

# Bugs
- you currently need to call getParticipantShared every time you use it to ensure you have an update to date list
- make this work more like shared where i replace contents keeping references pointting the right spot

	
# Style / Naming

# Enhancements

- Record 

- Client
	- consider cacheing random id in _session_ storage so reloads can reconnect as same client
	
- Room
	- make debug view opt in
	- add ping to debug view?
	
	
# Docs
- also, while possibly this same library could be used for long term server persistance, for now limit the scope to session-longevity multiplayer
	
# Questions

# Tips

# Examples

# Requests
- add a way to clear all the shared records in a room

# Branch - Subscribe

--- get shared object changed messages

# Branch - Push Improvements

- config auto push or not on records
- config record push debounce

# Branch - Participants

--- expose participant count
--- expose participant list
--- expose a record of info for each participant

# Branch - Info
- using vue?
- debug view?
- room view?
	- show room records
	- show room participants
- dashboard view?
	- show apps, rooms, records, participants

# Branch - Deep Update
- check this out, in order to make record support sharing any property of the record (not just .shared)
	-- Doesn't work because of the `shortcut reference` problem
	- 1) watch the whole record instead of shared
	- 2) return the part of the whole record you want to expose, or that is requested
	- 3) done!
- ?Do a deep nested update of .shared (or whole record) so that shortcut references will still work?
	-- would solve the `shortcut reference` problem